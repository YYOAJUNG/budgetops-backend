name: Build & Deploy to OCI

on:
  workflow_dispatch: {}
  push:
    branches: [ main, feature/1 ]
    paths:
      - 'Dockerfile'
      - 'src/**'
      - 'build.gradle'
      - 'settings.gradle'
      - 'gradle/**'
      - 'docker-compose*.yml'
      - '.github/workflows/deploy.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      # 모든 이미지 경로를 소문자로 통일
      - name: Make lowercase image repo
        run: |
          IMAGE_REPO="ghcr.io/$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')"
          echo "IMAGE_REPO=${IMAGE_REPO}" >> $GITHUB_ENV
          echo "IMAGE_TAG_LATEST=${IMAGE_REPO}:latest" >> $GITHUB_ENV
          echo "IMAGE_TAG_SHA=${IMAGE_REPO}:${{ github.sha }}" >> $GITHUB_ENV

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (latest + sha)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_TAG_LATEST }}
            ${{ env.IMAGE_TAG_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Upload compose files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: |
            docker-compose.yml
            docker-compose.base.yml
            docker-compose.prod.yml
          target: /opt/budgetops/backend

      - name: Remote deploy (OCI)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail

            # 이미지 레포 경로는 서버 쪽에서 다시 소문자 변환
            IMAGE_REPO_LC="ghcr.io/$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')"

            # GHCR 로그인(PAT; read:packages 권한 필요)
            sudo docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" -p "${{ secrets.GHCR_TOKEN }}"

            cd /opt/budgetops/backend

            if [ -f docker-compose.yml ]; then
              sudo docker compose pull
              sudo docker compose up -d --remove-orphans
            else
              sudo docker compose -f docker-compose.base.yml -f docker-compose.prod.yml pull
              sudo docker compose -f docker-compose.base.yml -f docker-compose.prod.yml up -d --remove-orphans
            fi

            sudo docker image prune -f || true
            sudo systemctl reload nginx || true
